// <auto-generated />
using System;
using Auction.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Auction.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20251017144126_TestAuctionMigration")]
    partial class TestAuctionMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Auction.Domain.Entities.AuctionItem", b =>
                {
                    b.Property<int>("AuctionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("auction_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("AuctionId"));

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<decimal>("CurrentPrice")
                        .HasColumnType("numeric")
                        .HasColumnName("current_price");

                    b.Property<DateTimeOffset?>("DeletedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("deleted_at");

                    b.Property<decimal>("DepositAmount")
                        .HasColumnType("numeric")
                        .HasColumnName("deposit_amount");

                    b.Property<DateTimeOffset>("EndTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("end_time");

                    b.Property<int>("ProductId")
                        .HasColumnType("integer")
                        .HasColumnName("product_id");

                    b.Property<DateTimeOffset>("StartTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("start_time");

                    b.Property<decimal>("StartingPrice")
                        .HasColumnType("numeric")
                        .HasColumnName("starting_price");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("status");

                    b.Property<int?>("TransactionId")
                        .HasColumnType("integer")
                        .HasColumnName("transaction_id");

                    b.Property<DateTimeOffset?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.Property<int?>("WinnerId")
                        .HasColumnType("integer")
                        .HasColumnName("winner_id");

                    b.HasKey("AuctionId")
                        .HasName("pk_auctions");

                    b.ToTable("auctions");
                });

            modelBuilder.Entity("Auction.Domain.Entities.Bid", b =>
                {
                    b.Property<int>("BidId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("bid_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("BidId"));

                    b.Property<int>("AuctionId")
                        .HasColumnType("integer")
                        .HasColumnName("auction_id");

                    b.Property<decimal>("BidAmount")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("bid_amount");

                    b.Property<DateTimeOffset>("BidTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("bid_time");

                    b.Property<int>("BidderId")
                        .HasColumnType("integer")
                        .HasColumnName("bidder_id");

                    b.Property<bool>("IsWinning")
                        .HasColumnType("boolean")
                        .HasColumnName("is_winning");

                    b.Property<int>("StatusDeposit")
                        .HasColumnType("integer")
                        .HasColumnName("status_deposit");

                    b.HasKey("BidId")
                        .HasName("pk_bids");

                    b.HasIndex("AuctionId")
                        .HasDatabaseName("ix_bids_auction_id");

                    b.ToTable("bids");
                });

            modelBuilder.Entity("Auction.Domain.Entities.Bid", b =>
                {
                    b.HasOne("Auction.Domain.Entities.AuctionItem", null)
                        .WithMany("Bids")
                        .HasForeignKey("AuctionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Auction.Domain.Entities.AuctionItem", b =>
                {
                    b.Navigation("Bids");
                });
#pragma warning restore 612, 618
        }
    }
}
